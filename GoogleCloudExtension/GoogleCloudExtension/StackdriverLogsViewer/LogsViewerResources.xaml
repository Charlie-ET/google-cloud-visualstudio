<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:GoogleCloudExtension.Controls;assembly=GoogleCloudExtension"    
    xmlns:ext="clr-namespace:GoogleCloudExtension;assembly=GoogleCloudExtension"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"                 
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Theming/CommonResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- DataGrid cell style. 
        Note: Add padding to text, padding at row style does not work. -->
    <Style x:Key="cellStyle" TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="border" Padding="0,4,0,4" >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="rowStyle" TargetType="DataGridRow">
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Background" Value="#FFFDFDFD" />
        <Style.Triggers>
            <!-- The Alternation Background must be set here when IsMouseOver trigger is defined. -->
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#F5F5F5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFFD6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Log entry detail tree view item text style. -->
    <Style x:Key="TreeNodeTextStyle" 
           TargetType="TextBlock" 
           BasedOn="{StaticResource CommonTextStyle}" >
        <Setter Property="Margin" Value="3,2,3,2"/>
        <Setter Property="Foreground" Value="DarkSlateGray"/>
    </Style>
    
    <!-- Page title bar style. -->
    <Style x:Key="PageTitleBarStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.PanelTitleBarKey}}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!-- Style for ImageButton -->
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type controls:IconButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}">
                        <Image x:Name="imagePresenter" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}"
                               Source="{TemplateBinding NormalIcon}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Source" TargetName="imagePresenter" 
                                    Value="{Binding MouseOverIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Source" TargetName="imagePresenter" 
                                    Value="{Binding MouseDownIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- image text mix button -->
    <Style x:Key="BackButtonStyle" TargetType="{x:Type controls:ImageToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="6" />
        <Setter Property="Foreground" Value="#FF3B78E7" />
        <Setter Property="MouseOverForeground" Value="BlueViolet" />
        <Setter Property="IsChecked" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageToggleButton}">
                    <Border 
                        x:Name="_backButtonBorder"
                        Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal" >
                        <Image 
                            x:Name="_backButtonImage"
                            VerticalAlignment="Center"
                            Stretch="None"
                            Source="{TemplateBinding CheckedImage}" />
                        <TextBlock
                            x:Name="_backButtonContent"
                            VerticalAlignment="Center"
                            Padding="6"
                            Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_backButtonBorder" Property="Background"
                                    Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="_backButtonContent" Property="Foreground"
                                    Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for search Icon -->
    <Style x:Key="SearchIconStyle" TargetType="{x:Type controls:IconButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border x:Name="_imageButtonBorder"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}" >
                        <Image x:Name="imagePresenter" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{TemplateBinding NormalIcon}" 
                               Stretch="None" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="_imageButtonBorder" Value="#FFE4B5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="_imageButtonBorder" Value="#F2A600" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
